node Moving
  sub
    LeftWheel : Motor;
    RightWheel : Motor;
  state
    moving : [-1,3] : public;
  event
    back, stop, left, forward, right;
  trans
    true |- back -> moving := -1;
    true |- stop -> moving := 0;
    true |- left -> moving := 1;
    true |- forward -> moving := 2;
    true |- right -> moving := 3;
  sync
    <back, LeftWheel.back, RightWheel.back>;
    <stop, LeftWheel.stop, RightWheel.stop>;
    <left, LeftWheel.back, RightWheel.forward>;
    <forward, LeftWheel.forward, RightWheel.forward>;
    <right, LeftWheel.forward, RightWheel.back>;
  init
    LeftWheel.move := 0, RightWheel.move := 0, moving := 0;
edon